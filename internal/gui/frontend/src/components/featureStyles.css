/* Animation timing variables for consistent fade effects */
:root {
    --feature-card-fade-duration: 0.8s;
    --feature-card-fade-timing: ease-out;
}

/* Grid layout for option rows with fixed widths */
.option-row {
    display: grid;
    grid-template-columns: minmax(120px, 1fr) minmax(0, 1.5fr); /* Match with group option layout */
    gap: 1rem;
    align-items: center;
    padding-left: 0.125rem;
}
    
/* Standardized grid layout for consistent spacing and alignment */
.options-grid {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.option-label {
    display: flex;
    align-items: center;
    min-width: 120px; /* Ensure minimum width for labels */
}

.option-input {
    width: 100%; /* Ensure consistent width with group options */
    max-width: 100%; /* Ensure it doesn't exceed container */
}

/* Create a wrapper for input components to ensure consistent width */
.input-wrapper {
    width: 100%;
    max-width: 100%;
    min-width: 0; /* Allow shrinking if needed */
}

    
.feature-message-card {
    position: relative;
    left: 0;
    text-align: left;
}
    
    
.feature-card {
    transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1),
                background 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform, box-shadow, opacity;
    /* Gradient from top-left (purplish) to bottom-right with reduced opacity */
    background: var(--style-feature-card-gradient) !important;
    /* Position relative for pseudo-element gradient border */
    position: relative;
    /* Remove default border since we're using pseudo-element */
    border: none;
    overflow: hidden; /* Prevent borders from overflowing */
    
    /* Enable 3D transforms */
    transform-style: preserve-3d;
    transform-origin: center center;
    backface-visibility: hidden;
    
    /* Create a pseudo-element for the gradient border that respects rounded corners */
    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border-radius: inherit; /* Inherit rounded corners from parent */
        padding: 1px; /* Border width */
        transition: background var(--feature-card-fade-duration) var(--feature-card-fade-timing),
                    padding var(--feature-card-fade-duration) var(--feature-card-fade-timing),
                    opacity var(--feature-card-fade-duration) var(--feature-card-fade-timing);
        background: linear-gradient(
            to bottom right, 
            rgba(255, 255, 255, 0) 0%, 
            rgba(255, 255, 255, 0.05) 50%, 
            hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.3) 51%, 
            hsla(var(--secondary-hue), var(--secondary-saturation), var(--secondary-lightness), 0.25) 100%
        );
        -webkit-mask: 
            linear-gradient(#fff 0 0) content-box, 
            linear-gradient(#fff 0 0);
        -webkit-mask-composite: xor;
        mask-composite: exclude;
        pointer-events: none; /* Make sure clicks pass through to the main element */
        z-index: 0;
    }
    box-shadow: 2px 2px 0 0 hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.2),
              4px 4px 8px -2px rgba(0, 0, 0, 0.2);
}

.feature-card[aria-checked="true"] {
    transform: translateY(-3px) translateZ(30px) scale(1.02);
    /* Selected state gradient - enhanced version of base gradient */
    background: var(--style-feature-card-gradient) !important;
    filter: brightness(1.15) saturate(1.1);
    /* Brighter border for selected state using pseudo-element */
    &::before {
        padding: 1px;
        background: linear-gradient(
            to bottom right, 
            rgba(255, 255, 255, 0.0) 0%, /* while enable keep it all around this time & use the box-shadow to keep bottom-right more proeminent */
            hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.5) 50%, 
            hsla(var(--secondary-hue), var(--secondary-saturation), var(--secondary-lightness), 0.45) 90%
        );
        z-index: 1; /* Increase z-index to ensure hover border appears on top */
    }
    /* Enhanced shadow for depth perception */
    box-shadow: 
        0 1px 0 0 hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.2),
        0 2px 4px -1px hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.25),
        0 4px 8px -2px hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.2),
        0 8px 16px -4px hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.15),
        0 12px 24px -6px rgba(0, 0, 0, 0.2),
        /* GitHub-inspired floating shadow with inverted light source */
        -24px -24px 48px 0px rgba(0, 0, 0, 0.2);
    z-index: 5;
    transform-origin: center center;
    position: relative;
    margin: 0;
}


.feature-card:hover:not(.disabled) {
    transform: translateY(-6px) translateZ(50px) scale(1.025) rotateX(-3deg);
    /* Hover state gradient - enhanced version of base gradient */
    background: var(--style-feature-card-gradient) !important;
    filter: brightness(1.1) saturate(1.05);
    
    /* Enhanced shadow for hover depth */
    box-shadow: 
        0 2px 0 0 hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.3),
        0 4px 8px -2px hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.3),
        0 8px 16px -4px hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.25),
        0 16px 32px -8px rgba(0, 0, 0, 0.2),
        /* GitHub-inspired floating shadow with inverted light source */
        -24px -24px 48px 0px rgba(0, 0, 0, 0.25);
    z-index: 5;
    transform-origin: center center;
    margin: 0;
}

/* Combined hover + enabled state for most dramatic effect */
.feature-card:hover[aria-checked="true"]:not(.disabled) {
    transform: translateY(-6px) translateZ(55px) scale(1.025) rotateX(-3deg);
    filter: brightness(1.2) saturate(1.15);
    
    /* Enhanced pseudo-element border for hover+enabled */
    &::before {
        padding: 2.5px;
        background: linear-gradient(
            to bottom right, 
            hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.6) 0%,
            hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.7) 50%, 
            hsla(var(--secondary-hue), var(--secondary-saturation), var(--secondary-lightness), 0.6) 100%
        );
    }
    
    /* Dramatic shadow for maximum depth effect */
    box-shadow: 
        0 2px 0 0 hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.3),
        0 4px 0 0 hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.25),
        0 8px 16px -4px hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.3),
        0 16px 32px -8px hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.25),
        0 24px 48px -12px rgba(0, 0, 0, 0.3),
        /* GitHub-inspired floating shadow with inverted light source - stronger for hover+enabled */
        -24px -24px 48px 0px rgba(0, 0, 0, 0.4);
    z-index: 10;
}

/* Ensure smooth transition back to normal state */
.feature-card:not(:hover):not([aria-checked="true"]) {
    transform: translateY(0) translateZ(0) scale(1);
    transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1),
                background 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}


@keyframes fadeInGradient {
    0% { opacity: 0; transform: scale(0.98); }
    100% { opacity: 1; transform: scale(1); }
}

/* Smooth flowing animations using background-position */
@keyframes smoothFlowToLeft {
    0% {
        background-position: 0% 0%;
    }
    100% {
        background-position: 200% 0%;
    }
}

@keyframes smoothFlowToTop {
    0% {
        background-position: 0% 0%;
    }
    100% {
        background-position: 0% 200%;
    }
}


/* Animation for cards */
@keyframes shake {
    0%, 100% { transform: translateX(0) translateY(0); }
    25% { transform: translateX(-2px) translateY(0); }
    75% { transform: translateX(2px) translateY(0); }
}

.shake-animation {
    animation: shake 0.4s ease-in-out;
    position: relative;
}

/* Icon adjustments */
.material-icon-adjust {
    position: relative;
    top: 5px;
}


/* Material ripple effect styles */
.ripple {
    position: relative;
    overflow: hidden;
}

/* Use separate ripple element for cleaner effect */
.ripple-element {
    position: absolute;
    border-radius: 50%;
    background-color: hsla(var(--primary-hue), var(--primary-saturation), var(--primary-lightness), 0.15);
    width: 100px;
    height: 100px;
    margin-top: -50px;
    margin-left: -50px;
    pointer-events: none;
    z-index: 3; /* Make sure it appears above the background but below other content */
    animation: ripple 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    will-change: transform, opacity;
}

@keyframes ripple {
    0% {
        transform: scale(0);
        opacity: 0.4;
    }
    100% {
        transform: scale(3.5);
        opacity: 0;
    }
}

/* Container styles for 3D perspective effect */
.feature-cards-container {
    perspective: 1200px;
    perspective-origin: center center;
    transform-style: preserve-3d;
}